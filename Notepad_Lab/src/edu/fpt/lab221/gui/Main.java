/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.fpt.lab221.gui;

import com.fpt.lab221.business.Bussiness;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.event.UndoableEditEvent;
import javax.swing.event.UndoableEditListener;
import javax.swing.text.Document;
import javax.swing.undo.UndoManager;

/**
 *
 * @author SonVu
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    JFileChooser jfc = new JFileChooser();

    JFrame frame;
    Bussiness bs;
    Replace re;
    UndoManager um;

    boolean isnewfile;
    String temp;
    String filepath;
    String filetextorigin;

    public Main() {
        initComponents();
        bs = new Bussiness(this);
        setTitle("Unitled");

        temp = jtxtNotepad.getText();
        isnewfile = true;
        filepath = "";
        filetextorigin = "";

        //UNDO & REDO
        //bs.undo_redo(jtxtNotepad);
        um = new UndoManager();
        Document doc = this.jtxtNotepad.getDocument();
        doc.addUndoableEditListener(new UndoableEditListener() {
            @Override
            public void undoableEditHappened(UndoableEditEvent e) {
                um.addEdit(e.getEdit());
            }
        });
    }

    public JTextArea getJtxtNotepad() {
        return jtxtNotepad;
    }

    public void setJtxtNotepad(JTextArea jtxtNotepad) {
        this.jtxtNotepad = jtxtNotepad;
    }

    //VERIFY_SAVE_AS
    public boolean verify_Save() {
        if (!filetextorigin.equals(jtxtNotepad.getText())) {
            int result;
            Object[] options = {"Save", "Don't save", "Cancel"};
            //if (isnewfile) {
            result = JOptionPane.showOptionDialog(this,
                    "Do you want to save changes to " + filepath, "Notepad",
                    JOptionPane.YES_NO_CANCEL_OPTION,
                    JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
            /*} else {
                String file = this.getTitle();
                result = JOptionPane.showOptionDialog(this,
                        "Do you want to save changes to " + file, "Notepad",
                        JOptionPane.YES_NO_CANCEL_OPTION,
                        JOptionPane.QUESTION_MESSAGE, null, options, options[0]);*/

            if (result == JOptionPane.YES_OPTION) {
                if (!isnewfile) {
                    try {
                        bs.saveFile(jtxtNotepad);
                    } catch (Exception e) {
                    }
                } else {
                    bs.saveFileAs(jtxtNotepad);
                }
            }
            if (result == JOptionPane.NO_OPTION) {
                return true;
            }
            if (result == JOptionPane.CANCEL_OPTION) {
                return false;
                //frame.setVisible(true);
            }
            //} 
        }
        return true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtxtNotepad = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jmenubar1 = new javax.swing.JMenu();
        jmenuNew = new javax.swing.JMenuItem();
        jmnOpen = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jmnSaveAs = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jmnExit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jmnSelectAll = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenuItem11 = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        jMenuItem12 = new javax.swing.JMenuItem();
        jMenuItem13 = new javax.swing.JMenuItem();
        jMenuItem14 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jtxtNotepad.setColumns(20);
        jtxtNotepad.setRows(5);
        jtxtNotepad.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jtxtNotepadCaretUpdate(evt);
            }
        });
        jtxtNotepad.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                jtxtNotepadCaretPositionChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jtxtNotepad);

        jmenubar1.setText("File");

        jmenuNew.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.META_MASK));
        jmenuNew.setText("New");
        jmenuNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmenuNewActionPerformed(evt);
            }
        });
        jmenubar1.add(jmenuNew);

        jmnOpen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.META_MASK));
        jmnOpen.setText("Open");
        jmnOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmnOpenActionPerformed(evt);
            }
        });
        jmenubar1.add(jmnOpen);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.META_MASK));
        jMenuItem3.setText("Save");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jmenubar1.add(jMenuItem3);

        jmnSaveAs.setText("Save as");
        jmnSaveAs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmnSaveAsActionPerformed(evt);
            }
        });
        jmenubar1.add(jmnSaveAs);
        jmenubar1.add(jSeparator1);

        jmnExit.setText("Exit");
        jmnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmnExitActionPerformed(evt);
            }
        });
        jmenubar1.add(jmnExit);

        jMenuBar1.add(jmenubar1);

        jMenu2.setText("Edit");

        jmnSelectAll.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.META_MASK));
        jmnSelectAll.setText("Select All");
        jmnSelectAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmnSelectAllActionPerformed(evt);
            }
        });
        jMenu2.add(jmnSelectAll);

        jMenuItem7.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.META_MASK));
        jMenuItem7.setText("Cut");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem7);

        jMenuItem8.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.META_MASK));
        jMenuItem8.setText("Copy");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem8);

        jMenuItem9.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.META_MASK));
        jMenuItem9.setText("Paste");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem9);
        jMenu2.add(jSeparator2);

        jMenuItem10.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.META_MASK));
        jMenuItem10.setText("Undo");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem10);

        jMenuItem11.setText("Redo");
        jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem11ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem11);
        jMenu2.add(jSeparator3);

        jMenuItem12.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.META_MASK));
        jMenuItem12.setText("Find");
        jMenuItem12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem12ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem12);

        jMenuItem13.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.META_MASK));
        jMenuItem13.setText("Replace");
        jMenuItem13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem13ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem13);

        jMenuItem14.setText("Change Font");
        jMenuItem14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem14ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem14);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 470, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //NEW
    private void jmenuNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmenuNewActionPerformed
        // TODO add your handling code here:
//        if (!verify_Save()) {
//            return;
//        }
        if (!verify_Save()) {
            return;
        }
        jtxtNotepad.setText("");
        this.setTitle("Untitle");
        isnewfile = true;
        filepath = "";
        filetextorigin = "";

    }//GEN-LAST:event_jmenuNewActionPerformed

    //OPEN
    private void jmnOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmnOpenActionPerformed
        // TODO add your handling code here:
//        if (!verify_Save()) {
//            return;
//        }
        if (!verify_Save()) {
            return;
        }
        try {
            bs.openFile(jtxtNotepad);
            filetextorigin = jtxtNotepad.getText();
            isnewfile = false;
        } catch (Exception e) {
            System.out.println(e);
        }
        //filepath = jfc.getSelectedFile().getAbsolutePath();
        //this.setTitle(jfc.getSelectedFile().getName());


    }//GEN-LAST:event_jmnOpenActionPerformed

    //SAVE
    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        if (!filetextorigin.equals(jtxtNotepad.getText())) {
            if (!isnewfile) {
                try {
                    //filetextorigin = jtxtNotepad.getText();
                    bs.saveFile(jtxtNotepad);

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, frame);
                }
            } else {
                try {
                    bs.saveFileAs(jtxtNotepad);
                    //isnewfile = false;
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, frame);
                }
            }
        }
        isnewfile = false;
        filetextorigin = jtxtNotepad.getText();
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    //SAVE AS
    private void jmnSaveAsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmnSaveAsActionPerformed
        // TODO add your handling code here:

        try {
            bs.saveFileAs(jtxtNotepad);
            isnewfile = false;

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
//        if (!filetextorigin.equals(jtxtNotepad.getText())) {
//            if (!isnewfile) {
//                try {
//                    bs.saveFile(jtxtNotepad);
//                    isnewfile = false;
//                } catch (Exception e) {
//                }
//            } else {
//                try {
//                    bs.saveFileAs(jtxtNotepad);
//                    isnewfile = false;
//                } catch (Exception e) {
//                }
//
//            }
//        }


    }//GEN-LAST:event_jmnSaveAsActionPerformed

    //EXIT
    private void jmnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmnExitActionPerformed
        // TODO add your handling code here:
        if (!verify_Save()) {
            return;
        }
        System.exit(0);
    }//GEN-LAST:event_jmnExitActionPerformed

    //SELECT ALL
    private void jmnSelectAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmnSelectAllActionPerformed
        // TODO add your handling code here:
        jtxtNotepad.selectAll();
    }//GEN-LAST:event_jmnSelectAllActionPerformed

    //CUT
    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        // TODO add your handling code here:
        jtxtNotepad.cut();
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    //COPY
    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        // TODO add your handling code here:
        jtxtNotepad.copy();
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    //PASTE
    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        // TODO add your handling code here:
        jtxtNotepad.paste();
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    //FIND
    private void jMenuItem12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem12ActionPerformed
        // TODO add your handling code here:
        bs.removeHighlight(jtxtNotepad);
        String search = JOptionPane.showInputDialog(this, "Enter word to search");
        bs.find(jtxtNotepad, search);
    }//GEN-LAST:event_jMenuItem12ActionPerformed

    //UNDO
    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        // TODO add your handling code here:
        try {
            if (um.canUndo()) {
                um.undo();
            }
        } catch (Exception e) {
            
        }
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    //REDO
    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem11ActionPerformed
        // TODO add your handling code here:
        try {
            if (um.canRedo()) {
                um.redo();
            }
        } catch (Exception e) {
            
        }
    }//GEN-LAST:event_jMenuItem11ActionPerformed

    private void jMenuItem13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem13ActionPerformed
        // TODO add your handling code here:
        re = new Replace(this, true);
        re.setVisible(true);
    }//GEN-LAST:event_jMenuItem13ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        if (!verify_Save()) {
            return;
        }
        System.exit(0);
    }//GEN-LAST:event_formWindowClosing

    private void jtxtNotepadCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jtxtNotepadCaretUpdate
        // TODO add your handling code here:
        //bs.removeHighlight(jtxtNotepad);
    }//GEN-LAST:event_jtxtNotepadCaretUpdate

    private void jMenuItem14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem14ActionPerformed
        // TODO add your handling code here:
        ChosseFont font = new ChosseFont(this, true);
        font.setVisible(true);
    }//GEN-LAST:event_jMenuItem14ActionPerformed

    private void jtxtNotepadCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jtxtNotepadCaretPositionChanged
        // TODO add your handling code here:
        //bs.removeHighlight(jtxtNotepad);
    }//GEN-LAST:event_jtxtNotepadCaretPositionChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JMenuItem jmenuNew;
    private javax.swing.JMenu jmenubar1;
    private javax.swing.JMenuItem jmnExit;
    private javax.swing.JMenuItem jmnOpen;
    private javax.swing.JMenuItem jmnSaveAs;
    private javax.swing.JMenuItem jmnSelectAll;
    private javax.swing.JTextArea jtxtNotepad;
    // End of variables declaration//GEN-END:variables
}
